import{_ as s,o as a,c as n,O as l}from"./chunks/framework.5e191eb6.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{"title":["前端构建工具笔记"],"date":"2023-05-14T02:55:56.000Z","tags":null},"headers":[],"relativePath":"column/learning/buildingTool.md","filePath":"column/learning/buildingTool.md"}'),o={name:"column/learning/buildingTool.md"},e=l(`<h2 id="package-json文件中scripts属性的配置" tabindex="-1">package.json文件中scripts属性的配置 <a class="header-anchor" href="#package-json文件中scripts属性的配置" aria-label="Permalink to &quot;package.json文件中scripts属性的配置&quot;">​</a></h2><p>eslint,prettier的作用</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 使用 ESLint 检查并自动修复 src 目录下所有扩展名为 .js 和 .vue 的文件</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">eslint</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">eslint --ext .js,.vue --ignore-path .gitignore --fix src</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 自动格式化当前目录下的所有文件</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">prettier</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">prettier --write</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><p>自定义同时运行多个命令</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 同时运行dev命令和所有dev-child开头的命令</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dev:main-vite</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">npm-run-all --parallel dev dev-child:*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 执行以上自定义命令的前提：1.全局安装npm-run-all;2.项目目录下安装npm-run-all:即确保在项目的 package.json 文件中的 devDependencies 或 dependencies 中包含了 npm-run-all 的依赖项;3.定义dev命令和dev-child命令</span></span>
<span class="line"><span style="color:#A6ACCD;">npm install </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">g npm</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">run</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">all</span></span>
<span class="line"><span style="color:#A6ACCD;">npm install </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">save</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">dev npm</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">run</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">all</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dev</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vite</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dev-child:vue2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cd vue2 &amp;&amp; npm run dev</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span></code></pre></div><h2 id="脚手架项目运行报错-error-0308010c-digital-envelope-routines-unsupported" tabindex="-1">脚手架项目运行报错:error:0308010C:digital envelope routines::unsupported <a class="header-anchor" href="#脚手架项目运行报错-error-0308010c-digital-envelope-routines-unsupported" aria-label="Permalink to &quot;脚手架项目运行报错:error:0308010C:digital envelope routines::unsupported&quot;">​</a></h2><p>这个是node新版本引起的问题，解决方案是package.json文件的运行命令前加上SET NODE_OPTIONS=--openssl-legacy-provider</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dev:main-vite</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SET NODE_OPTIONS=--openssl-legacy-provider &amp;&amp; npm-run-all --parallel dev dev-child:*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span></code></pre></div>`,8),p=[e];function t(r,c,i,D,y,d){return a(),n("div",null,p)}const C=s(o,[["render",t]]);export{F as __pageData,C as default};
