import{_ as s,c as i,o as a,U as t}from"./chunks/framework.WIFurlG-.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{"title":["uniapp笔记"],"date":"2023-05-14T02:47:59.000Z","tags":null},"headers":[],"relativePath":"column/learning/uniapp.md","filePath":"column/learning/uniapp.md"}'),n={name:"column/learning/uniapp.md"},l=t(`<h2 id="微信开发者工具运行小程序项目后登录报错-http-xxx-xxx-xxx-com不在合法域名内" tabindex="-1">微信开发者工具运行小程序项目后登录报错:<a href="http://xxx.xxx.xxx.xn--com-928dq2nhoe9a814cdvbe91i" target="_blank" rel="noreferrer">http://xxx.xxx.xxx.com不在合法域名内</a> <a class="header-anchor" href="#微信开发者工具运行小程序项目后登录报错-http-xxx-xxx-xxx-com不在合法域名内" aria-label="Permalink to &quot;微信开发者工具运行小程序项目后登录报错:http://xxx.xxx.xxx.com不在合法域名内&quot;">​</a></h2><p>原因：未开启微信开发者工具不校验合法域名 解决方法:点击详情-本地设置-勾选不校验合法域名</p><h2 id="uniapp-项目使用-hbuilderx-以插件的方式导入-uview-步骤" tabindex="-1">uniapp 项目使用 hbuilderx 以插件的方式导入 uview 步骤: <a class="header-anchor" href="#uniapp-项目使用-hbuilderx-以插件的方式导入-uview-步骤" aria-label="Permalink to &quot;uniapp 项目使用 hbuilderx 以插件的方式导入 uview 步骤:&quot;">​</a></h2><p>1.打开插件市场，搜索 uview，选择下载插件并导入 hbuilderx 2.main.js 中引用</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> uView </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@/uni_modules/uview-ui&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Vue.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(uView);</span></span></code></pre></div><p>3.uni.scss 中导入</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@/uni_modules/uview-ui/theme.scss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>4.在 APP.vue 以及所有的 vue 文件中 style 标签上加 scss</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;scss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="java-环境变量配置-uniapp-本地打包-apk-生成证书签名的时候会用到" tabindex="-1">java 环境变量配置(uniapp 本地打包 apk 生成证书签名的时候会用到) <a class="header-anchor" href="#java-环境变量配置-uniapp-本地打包-apk-生成证书签名的时候会用到" aria-label="Permalink to &quot;java 环境变量配置(uniapp 本地打包 apk 生成证书签名的时候会用到)&quot;">​</a></h2><p>JAVA_HOME 为 jdk 的实际安装路径，Path 和 CLASSPATH 的路径通用,直接复制即可</p><ol><li>JAVA_HOME：D:\\Program Files\\Java\\jdk-1.8</li><li>Path：①%JAVA_HOME%\\jre\\bin ②%JAVA_HOME%\\bin</li><li>CLASSPATH：.;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar;</li></ol><h2 id="uniapp-打包成-apk-时-安装包安装不上-报错" tabindex="-1">uniapp 打包成 APK 时,安装包安装不上,报错 <a class="header-anchor" href="#uniapp-打包成-apk-时-安装包安装不上-报错" aria-label="Permalink to &quot;uniapp 打包成 APK 时,安装包安装不上,报错&quot;">​</a></h2><p>不同机型的 CPU 类型不同,需要在 manifest.json 文件中切换 APP 常用其他设置,勾选支持 CPU 类型:armeabi-v7a 和 arm64-v8a</p><h2 id="uniapp-中使用-idata-条码扫描插件实现-pda-扫描头扫描功能-将插件作为本地插件来使用" tabindex="-1">uniapp 中使用 iData 条码扫描插件实现 PDA 扫描头扫描功能(将插件作为本地插件来使用)： <a class="header-anchor" href="#uniapp-中使用-idata-条码扫描插件实现-pda-扫描头扫描功能-将插件作为本地插件来使用" aria-label="Permalink to &quot;uniapp 中使用 iData 条码扫描插件实现 PDA 扫描头扫描功能(将插件作为本地插件来使用)：&quot;">​</a></h2><ol><li>打开 uniapp 插件市场，搜索 iData 条码扫描插件，下载 for 离线打包，将插件解压放在 nativeplugins 文件夹下，再将文件夹放入 uniapp 项目的根目录里</li><li>打开 manifest.json 文件，切换到 App 原生插件配置选项，找到本地插件，点击选择本地插件，导入刚刚的插件即可</li><li>在需要使用插件的页面的 script 标签里引入</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  const barcodeModel = uni.requireNativePlugin(&quot;iData-BarcodePlugin-BarcodeModule&quot;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  const modal = uni.requireNativePlugin(&#39;modal&#39;);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  const globalEvent = uni.requireNativePlugin(&#39;globalEvent&#39;);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  export default {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><ol start="4"><li>在页面加载的时候初始化插件</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	onLoad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">			// #ifdef APP-PLUS</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">			// 全局监听扫描事件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			globalEvent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;iDataBarcodeEvent&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				modal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">					message: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;收到条码：&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">					duration: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				});</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">				//连续扫描如果间隔时间比较短，会出现toast不提示的情况，数据可以正常接收到，建议查看控制台输出</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			});</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">			this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">initPad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">			// #endif</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		},</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 初始化扫描</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">initPad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				barcodeModel.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">initScan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ret</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">					modal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">						message: ret,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">						duration: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">					});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			},</span></span></code></pre></div><ol start="5"><li>在页面卸载的时候关闭扫描头</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	onUnload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			barcodeModel.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">closeScan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ret</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				modal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">					message: ret,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">					duration: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		},</span></span></code></pre></div><ol start="6"><li>在需要打开扫描头的地方绑定点击事件</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	clickPda</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				barcodeModel.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scanStart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ret</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">					modal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">						message: ret,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">						duration: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">					});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				});</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">				this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.testInfo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ret</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			},</span></span></code></pre></div><h2 id="uniapp-项目云打包成-app-步骤" tabindex="-1">uniapp 项目云打包成 APP 步骤 <a class="header-anchor" href="#uniapp-项目云打包成-app-步骤" aria-label="Permalink to &quot;uniapp 项目云打包成 APP 步骤&quot;">​</a></h2><ol><li>打开 manifest.json 文件,切换 APP 常用其他设置,勾选支持 CPU 类型:armeabi-v7a 和 arm64-v8a</li><li>打开 hbuilderx，选中当前项目,点击发行-原生 App 云打包,选择使用云端证书,xz 快速安心打包</li><li>控制台找到安装包所在目录即可</li></ol><h2 id="电脑给安卓手机或者-pda-安装-apk-安装包的方法" tabindex="-1">电脑给安卓手机或者 pda 安装 apk 安装包的方法 <a class="header-anchor" href="#电脑给安卓手机或者-pda-安装-apk-安装包的方法" aria-label="Permalink to &quot;电脑给安卓手机或者 pda 安装 apk 安装包的方法&quot;">​</a></h2><p>方法一:使用 360 手机助手安装或者微信,qq 来实现安装 方法二:使用 adb 来安装：</p><ol><li>下载 adb：<a href="https://dl.google.com/android/repository/platform-tools-latest-windows.zip%EF%BC%9A%E8%A7%A3%E5%8E%8B%E5%88%B0%E4%BB%BB%E6%84%8F%E7%9B%AE%E5%BD%95%EF%BC%8C%E4%BE%8B%E5%A6%82%E6%94%BE%E5%9C%A8D:%5CProgram" target="_blank" rel="noreferrer">https://dl.google.com/android/repository/platform-tools-latest-windows.zip：解压到任意目录，例如放在D:\\Program</a> Files 文件夹下面，这样 adb 的目录就是 D:\\Program Files\\platform-tools</li><li>配置 adb 环境变量：此电脑-&gt;系统属性-&gt;高级系统设置-&gt;环境变量-&gt;系统变量-&gt;path-&gt;新建-&gt;输入 adb 目录。终端输入 adb --version,验证是否成功</li><li>使用命令进行安装 apk 文件:adb install D:\\APKlxb\\simpleDemo-release.apk 注意：如果电脑中已有 Android Studio,则不需要下载 adb,只需要配置环境变量即可 环境变量也可以这样配置： adb_home:C:\\Users\\user\\AppData\\Local\\Android\\Sdk\\platform-tools path:%adb_home%</li></ol><h2 id="uniapp-进行离线打包-app-时报错" tabindex="-1">uniapp 进行离线打包 APP 时报错 <a class="header-anchor" href="#uniapp-进行离线打包-app-时报错" aria-label="Permalink to &quot;uniapp 进行离线打包 APP 时报错&quot;">​</a></h2><p>错误提示：xx 项目导出失败。这是因为 node 版本不对,uniapp 项目打包时需要切换成和项目运行时相同的 node 版本</p><h2 id="uniapp-中的弹窗-utoast" tabindex="-1">uniapp 中的弹窗 uToast <a class="header-anchor" href="#uniapp-中的弹窗-utoast" aria-label="Permalink to &quot;uniapp 中的弹窗 uToast&quot;">​</a></h2><p>uToast 同时只会存在一个,代码中如果同时写了多次触发条件,后面触发的弹窗的会覆盖前面的,前面的弹窗不再触发。以下代码只会触发第二个弹窗。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fun</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$refs.uToast.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">show</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;请扫描正确的二维码&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	 this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$refs.uToast.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">show</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;请扫描正确的二维码2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h2 id="安卓-modal-弹窗" tabindex="-1">安卓 modal 弹窗 <a class="header-anchor" href="#安卓-modal-弹窗" aria-label="Permalink to &quot;安卓 modal 弹窗&quot;">​</a></h2><p>该 modal 附带 return 功能，一旦触发会终止函数,阻止后续代码运行。以下代码中打印语句不再执行。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fun</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  modal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    message: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;收到条码：&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    duration: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;aaa&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div>`,36),p=[l];function h(k,e,E,d,r,o){return a(),i("div",null,p)}const y=s(n,[["render",h]]);export{c as __pageData,y as default};
