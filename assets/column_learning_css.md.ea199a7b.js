import{_ as s,o as a,c as l,O as n}from"./chunks/framework.5e191eb6.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{"title":["css笔记"],"date":"2023-05-14T02:46:31.000Z","tags":null},"headers":[],"relativePath":"column/learning/css.md","filePath":"column/learning/css.md"}'),e={name:"column/learning/css.md"},p=n(`<h2 id="除了-grad-布局-flex-布局中也支持间隙的概念" tabindex="-1">除了 grad 布局,flex 布局中也支持间隙的概念: <a class="header-anchor" href="#除了-grad-布局-flex-布局中也支持间隙的概念" aria-label="Permalink to &quot;除了 grad 布局,flex 布局中也支持间隙的概念:&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">row </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> gap行间隙</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//当flex设置可换行时,此属性最适用</span></span>
<span class="line"><span style="color:#A6ACCD;">column </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> gap列间隙</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="flex-1-详解" tabindex="-1">flex: 1 详解 <a class="header-anchor" href="#flex-1-详解" aria-label="Permalink to &quot;flex: 1 详解&quot;">​</a></h2><p>等效于</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">flex: 1 1 0%;</span></span></code></pre></div><p>等效于</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* 子元素将根据可用空间均匀分配剩余空间，即弹性增大 */</span></span>
<span class="line"><span style="color:#FFCB6B;">flex-grow</span><span style="color:#A6ACCD;">: 1;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 子元素将根据可用空间均匀收缩，即弹性收缩 */</span></span>
<span class="line"><span style="color:#FFCB6B;">flex-shrink</span><span style="color:#A6ACCD;">: 1;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 子元素的基础大小将始终为零，并且它们将根据 flex-grow 和 flex-shrink 属性进行扩展和收缩 */</span></span>
<span class="line"><span style="color:#FFCB6B;">flex-basis</span><span style="color:#A6ACCD;">: 0%;</span></span></code></pre></div><h2 id="flex-none-详解" tabindex="-1">flex: none 详解 <a class="header-anchor" href="#flex-none-详解" aria-label="Permalink to &quot;flex: none 详解&quot;">​</a></h2><p>等效于</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">flex: 0 0 auto;</span></span></code></pre></div><p>等效于</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* 子元素将不分配剩余空间,即不再弹性增大 */</span></span>
<span class="line"><span style="color:#FFCB6B;">flex-grow</span><span style="color:#A6ACCD;">: 0;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 子元素将不收缩剩余空间，即不再弹性收缩 */</span></span>
<span class="line"><span style="color:#FFCB6B;">flex-shrink</span><span style="color:#A6ACCD;">: 0;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 子元素的基础大小将由内容决定 */</span></span>
<span class="line"><span style="color:#FFCB6B;">flex-basis</span><span style="color:#A6ACCD;">: auto;</span></span></code></pre></div><h2 id="flex-0-详解" tabindex="-1">flex: 0 详解 <a class="header-anchor" href="#flex-0-详解" aria-label="Permalink to &quot;flex: 0 详解&quot;">​</a></h2><p>等效于</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">flex: 0 1 0%;</span></span></code></pre></div><p>等效于</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* 子元素将不分配剩余空间,即不再弹性增大 */</span></span>
<span class="line"><span style="color:#FFCB6B;">flex-grow</span><span style="color:#A6ACCD;">: 0;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 子元素将根据可用空间均匀收缩，即弹性收缩 */</span></span>
<span class="line"><span style="color:#FFCB6B;">flex-shrink</span><span style="color:#A6ACCD;">: 1;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 子元素的基础大小将始终为零，并且它们将根据 flex-shrink 属性收缩 */</span></span>
<span class="line"><span style="color:#FFCB6B;">flex-basis</span><span style="color:#A6ACCD;">: 0%;</span></span></code></pre></div><h2 id="flex-auto-详解" tabindex="-1">flex: auto 详解 <a class="header-anchor" href="#flex-auto-详解" aria-label="Permalink to &quot;flex: auto 详解&quot;">​</a></h2><p>等效于</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">flex: 1 1 auto;</span></span></code></pre></div><p>等效于</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* 子元素将根据可用空间均匀分配剩余空间，即弹性增大 */</span></span>
<span class="line"><span style="color:#FFCB6B;">flex-grow</span><span style="color:#A6ACCD;">: 1;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 子元素将根据可用空间均匀收缩，即弹性收缩 */</span></span>
<span class="line"><span style="color:#FFCB6B;">flex-shrink</span><span style="color:#A6ACCD;">: 1;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 子元素的基础大小将由内容决定，并且它们将根据 flex-grow 和 flex-shrink 属性进行扩展和收缩 */</span></span>
<span class="line"><span style="color:#FFCB6B;">flex-basis</span><span style="color:#A6ACCD;">: auto;</span></span></code></pre></div><h2 id="flex-initial-flex属性的默认值" tabindex="-1">flex: initial(flex属性的默认值) <a class="header-anchor" href="#flex-initial-flex属性的默认值" aria-label="Permalink to &quot;flex: initial(flex属性的默认值)&quot;">​</a></h2><p>等效于</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">flex: 0 1 auto;</span></span></code></pre></div><p>等效于</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* 子元素将不分配剩余空间,即不再弹性增大 */</span></span>
<span class="line"><span style="color:#FFCB6B;">flex-grow</span><span style="color:#A6ACCD;">: 0;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 子元素将根据可用空间均匀收缩，即弹性收缩 */</span></span>
<span class="line"><span style="color:#FFCB6B;">flex-shrink</span><span style="color:#A6ACCD;">: 1;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 子元素的基础大小将由内容决定，并且它们将根据flex-shrink 属性进行收缩 */</span></span>
<span class="line"><span style="color:#FFCB6B;">flex-basis</span><span style="color:#A6ACCD;">: auto;</span></span></code></pre></div>`,27),o=[p];function t(c,i,r,y,d,C){return a(),l("div",null,o)}const u=s(e,[["render",t]]);export{h as __pageData,u as default};
