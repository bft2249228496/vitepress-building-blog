import{_ as s,o as a,c as n,O as l}from"./chunks/framework.5e191eb6.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{"title":["vue2笔记"],"date":"2023-05-14T02:47:29.000Z","tags":null},"headers":[],"relativePath":"column/learning/vue2.md","filePath":"column/learning/vue2.md"}'),e={name:"column/learning/vue2.md"},o=l(`<h2 id="vue-动态组件" tabindex="-1">vue 动态组件 <a class="header-anchor" href="#vue-动态组件" aria-label="Permalink to &quot;vue 动态组件&quot;">​</a></h2><p>将 type 与子组件名绑定上，即可通过改变 type 来改变显示组件</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">component</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">is</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="vue-cli-在移动端注意事项" tabindex="-1">vue-cli 在移动端注意事项 <a class="header-anchor" href="#vue-cli-在移动端注意事项" aria-label="Permalink to &quot;vue-cli 在移动端注意事项&quot;">​</a></h2><p>① 在 index.html 中配置 meta 标签</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">meta</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">viewport</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">content</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">width=device-width,initial-scal=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">/&gt;</span></span></code></pre></div><p>② 保证所有浏览器效果一致：main.js 中引入 reset.css ③ 解决移动端一像素边框的问题：main.js 中引入 border.css ④ 解决移动端点击事件的 300 毫秒延迟的问题：使用 npm install fastclick --save 下载依赖，再在 main.js 中添加代码</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> fastClick </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">fastclick</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">fastClick</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">attach</span><span style="color:#A6ACCD;">(document</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">body)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="vue2-x-初始化项目" tabindex="-1">vue2.x(初始化项目) <a class="header-anchor" href="#vue2-x-初始化项目" aria-label="Permalink to &quot;vue2.x(初始化项目)&quot;">​</a></h2><p>构建项目命令行命令</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">npm install </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">g </span><span style="color:#89DDFF;">@</span><span style="color:#A6ACCD;">vue</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">cli vue create my</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">project</span></span></code></pre></div><h2 id="对一个-dom-元素上的-click-事件如果同时绑定两个函数需要加上花括号" tabindex="-1">对一个 dom 元素上的@click 事件如果同时绑定两个函数需要加上花括号 <a class="header-anchor" href="#对一个-dom-元素上的-click-事件如果同时绑定两个函数需要加上花括号" aria-label="Permalink to &quot;对一个 dom 元素上的@click 事件如果同时绑定两个函数需要加上花括号&quot;">​</a></h2><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">arrowFun</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    drawer </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">drawer</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div>`,13),p=[o];function t(c,r,i,D,F,y){return a(),n("div",null,p)}const C=s(e,[["render",t]]);export{d as __pageData,C as default};
