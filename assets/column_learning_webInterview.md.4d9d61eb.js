import{_ as s,o as a,c as n,O as l}from"./chunks/framework.5e191eb6.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{"title":["前端面试笔记"],"date":"2023-05-10T23:47:05.000Z","tags":null},"headers":[],"relativePath":"column/learning/webInterview.md","filePath":"column/learning/webInterview.md"}'),o={name:"column/learning/webInterview.md"},p=l(`<h2 id="语义化标签作用" tabindex="-1">语义化标签作用： <a class="header-anchor" href="#语义化标签作用" aria-label="Permalink to &quot;语义化标签作用：&quot;">​</a></h2><p>已修改，已维护 对搜索引擎友好，利于SEO</p><h2 id="介绍一下标准的css的盒子模型-与低版本ie的盒子模型有什么不同的" tabindex="-1">介绍一下标准的CSS的盒子模型？与低版本IE的盒子模型有什么不同的？ <a class="header-anchor" href="#介绍一下标准的css的盒子模型-与低版本ie的盒子模型有什么不同的" aria-label="Permalink to &quot;介绍一下标准的CSS的盒子模型？与低版本IE的盒子模型有什么不同的？&quot;">​</a></h2><p>标准盒子模型：宽度=内容的宽度（content）+ border + padding + margin 低版本IE盒子模型：宽度=内容宽度（content+border+padding）+ margin</p><h2 id="box-sizing属性" tabindex="-1">box-sizing属性 <a class="header-anchor" href="#box-sizing属性" aria-label="Permalink to &quot;box-sizing属性&quot;">​</a></h2><p>用来控制元素的盒子模型的解析模式，默认为content-box context-box：W3C的标准盒子模型，设置元素的 height/width 属性指的是content部分的高/宽 border-box：IE传统盒子模型。设置元素的height/width属性指的是border + padding + content部分的高/宽</p><h2 id="css选择器有哪些-哪些属性可以继承" tabindex="-1">CSS选择器有哪些？哪些属性可以继承？ <a class="header-anchor" href="#css选择器有哪些-哪些属性可以继承" aria-label="Permalink to &quot;CSS选择器有哪些？哪些属性可以继承？&quot;">​</a></h2><p>CSS选择符：id选择器(#myid)、类选择器(.myclassname)、标签选择器(div, h1, p)、相邻选择器(h1 + p)、子选择器（ul &gt; li）、后代选择器（li a）、通配符选择器（*）、属性选择器（a[rel=&quot;external&quot;]）、伪类选择器（a:hover, li:nth-child）</p><p>可继承的属性：font-size, font-family, color</p><p>不可继承的样式：border, padding, margin, width, height</p><p>优先级（就近原则）：!important &gt;style&gt; [ id &gt; class &gt; tag ] !important 比内联优先级高</p><h2 id="css优先级算法如何计算" tabindex="-1">CSS优先级算法如何计算？ <a class="header-anchor" href="#css优先级算法如何计算" aria-label="Permalink to &quot;CSS优先级算法如何计算？&quot;">​</a></h2><p>元素选择符： 1 class选择符： 10 id选择符：100 元素标签：1000</p><ol><li>!important声明的样式优先级最高，如果冲突再进行计算。</li><li>如果优先级相同，则选择最后出现的样式。</li><li>继承得到的样式的优先级最低。</li></ol><h2 id="_6-css3新增伪类有那些" tabindex="-1">6.CSS3新增伪类有那些? <a class="header-anchor" href="#_6-css3新增伪类有那些" aria-label="Permalink to &quot;6.CSS3新增伪类有那些?&quot;">​</a></h2><p>p:first-of-type 选择属于其父元素的首个元素 p:last-of-type 选择属于其父元素的最后元素 p:only-of-type 选择属于其父元素唯一的元素 p:only-child 选择属于其父元素的唯一子元素 p:nth-child(2) 选择属于其父元素的第二个子元素 :enabled :disabled 表单控件的禁用状态。 :checked 单选框或复选框被选中。</p><h2 id="position常见的值" tabindex="-1">position常见的值 <a class="header-anchor" href="#position常见的值" aria-label="Permalink to &quot;position常见的值&quot;">​</a></h2><ol><li><p>static（默认值）：元素按照 HTML 文件中的顺序一次排列，不受 top、bottom、left 和 right 属性的影响。</p></li><li><p>relative：元素相对于自身原来的位置定位。使用 top、bottom、left 和 right 属性可以移动元素，但依然占据原来的空间。</p></li><li><p>absolute：元素相对于包含它的父元素定位。使用 top、bottom、left 和 right 属性可以移动元素，不占据原来的空间。</p></li><li><p>fixed：元素相对于浏览器窗口定位。使用 top、bottom、left 和 right 属性可以移动元素，不占据原来的空间。</p></li><li><p>sticky：元素在滚动时会“吸附”到指定位置。在滚动到指定位置之前，元素按照正常布局排列，到达指定位置时“吸附”到指定位置。</p></li></ol><h2 id="typeof-操作符" tabindex="-1">typeof 操作符 <a class="header-anchor" href="#typeof-操作符" aria-label="Permalink to &quot;typeof 操作符&quot;">​</a></h2><p>typeof运算符可以判断表达式的类型，根据表达式返回七种结果：number,string,boolean,undefined,object,function,symbol__ 你可以使用 typeof操作符来查看 JavaScript 变量的数据类型。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">John</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">                 </span><span style="color:#676E95;font-style:italic;">// 返回 string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">\\</span><span style="color:#F78C6C;">.14</span><span style="color:#A6ACCD;">                   </span><span style="color:#676E95;font-style:italic;">// 返回 number</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NaN</span><span style="color:#A6ACCD;">                    </span><span style="color:#676E95;font-style:italic;">// 返回 number</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;">                  </span><span style="color:#676E95;font-style:italic;">// 返回 boolean</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> \\[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">\\]              </span><span style="color:#676E95;font-style:italic;">// 返回 object</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> \\</span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">name</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">John</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">age</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">34</span><span style="color:#F07178;">\\</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// 返回 object</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> Date\\(\\)             </span><span style="color:#676E95;font-style:italic;">// 返回 object</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> \\</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">\\</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> \\</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">\\</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">         </span><span style="color:#676E95;font-style:italic;">// 返回 function</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> myCar                  </span><span style="color:#676E95;font-style:italic;">// 返回 undefined \\(如果 myCar 没有声明\\)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">                   </span><span style="color:#676E95;font-style:italic;">// 返回 object</span></span></code></pre></div><h2 id="清除浮动的四中方法" tabindex="-1">清除浮动的四中方法 <a class="header-anchor" href="#清除浮动的四中方法" aria-label="Permalink to &quot;清除浮动的四中方法&quot;">​</a></h2><p>①额外标签法: 在浮动元素末尾添加一个空的标签</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">＜div style</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">clear:both/left/right</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">＞＜</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">div＞或者其他标签＜br＞等（w3推荐做法）</span></span></code></pre></div><p>②父级添加overflow属性方法:</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">father</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">overflow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">hidden/auto/scroll</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>③父级使用after伪元素:</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">clearfix</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">after</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">content</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">block</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">visibility</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">hidden</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">clear</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">both</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">clearfix</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">*</span><span style="color:#B2CCD6;">zoom</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;}</span></span></code></pre></div><p>④父级使用before和after双伪元素清除浮动:</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">clearfix</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">before</span><span style="color:#89DDFF;">,.</span><span style="color:#FFCB6B;">clearfix</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">after</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#B2CCD6;">content</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">table</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">clearfix</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">after</span><span style="color:#89DDFF;">{</span><span style="color:#B2CCD6;">clear</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">both</span><span style="color:#89DDFF;">;}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">clearfix</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">*</span><span style="color:#B2CCD6;">zoom</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;}</span></span></code></pre></div>`,30),e=[p];function t(c,r,i,y,D,F){return a(),n("div",null,e)}const h=s(o,[["render",t]]);export{d as __pageData,h as default};
